##################################################################################################
# 
# CMake script for finding Mqtt.
# For information see FindTinyXML.cmake, as this is a copy of that cmake but made to find Mqtt
# 
##################################################################################################

# Get package location hint from environment variable (if any)
if(NOT Mqtt_ROOT_DIR AND DEFINED ENV{Mqtt_ROOT_DIR})
  set(Mqtt_ROOT_DIR "$ENV{Mqtt_ROOT_DIR}" CACHE PATH
      "Mqtt base directory location (optional, used for nonstandard installation paths)")
endif()

# Search path for nonstandard package locations
if(Mqtt_ROOT_DIR)
  set(Mqtt_INCLUDE_PATH PATHS "${Mqtt_ROOT_DIR}/include" NO_DEFAULT_PATH)
  set(Mqtt_LIBRARY_PATH PATHS "${Mqtt_ROOT_DIR}/lib"     NO_DEFAULT_PATH)
endif()

# Find headers and libraries
find_path(Mqtt_INCLUDE_DIR NAMES mosquitto.h PATH_SUFFIXES "mosquitto" ${Mqtt_INCLUDE_PATH})
find_library(Mqtt_LIBRARY  NAMES mosquitto   PATH_SUFFIXES "mosquitto" ${Mqtt_LIBRARY_PATH})

mark_as_advanced(Mqtt_INCLUDE_DIR
                 Mqtt_LIBRARY)

# Output variables generation
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(Mqtt DEFAULT_MSG Mqtt_LIBRARY
                                                      Mqtt_INCLUDE_DIR)

set(Mqtt_FOUND ${MQTT_FOUND}) # Enforce case-correctness: Set appropriately cased variable...
unset(MQTT_FOUND) # ...and unset uppercase variable generated by find_package_handle_standard_args

if(Mqtt_FOUND)
  set(Mqtt_INCLUDE_DIRS ${Mqtt_INCLUDE_DIR})
  set(Mqtt_LIBRARIES ${Mqtt_LIBRARY})
endif()
